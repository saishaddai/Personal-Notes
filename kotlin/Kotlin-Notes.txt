Kotlin Notes


Basic Types: Numbers, Unsigned Numbers, Booleans, Strings, Characters, Arrays
Numbers: Byte, Short, Int, Long, Float, Double
Unsigned: UByte, UShort, UInt, ULong (No UFloat nor UDouble)
Classes:
Constructors: Primary and Secondary
init blocks: a special block of code that is executed when an object is created. It is used to initialize the properties of a class and perform any necessary setup. Used for Initialization, Validation, Setup, Logging
Open Classes:
Interfaces:
Java Interfaces VS Kotlin Interfaces
Java abstract classes VS Kotlin Open Classes
companion objects:
Java static final variables vs Kotlin companion objects
SAM Conversions:
Visibility modifiers: public, private, internal, protected
Class Members: public, private, internal, protected
Extensions:
Data Classes:
Sealed Classes:
Sealed Inerfaces:
Nested Clases:
Inner Classes:
Enums and annonimous classes:
Inline Value Classes: @JvmInLine
Delegation: Overriding and use of 'by'
Currying in Kotlin: Currying is a technique in functional programming that allows you to transform a function with multiple arguments into a sequence of functions, each with a single argument. This process enables you to break down a complex function into smaller, simpler functions that can be composed together.
